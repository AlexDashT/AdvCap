@page "/"
@using AdvCap.Client.Components
@inject ConfigService ConfigService
@inject StateService StateService
@inject IJSRuntime JSRuntime


@implements IDisposable

<div>
    <h1>Adventure Capitalist</h1>
    <div>Money: @StateService.Wallet.MoneyString</div>
    <div>
        @foreach (var businessID in ConfigService.Businesses.Keys)
        {
            <BusinessCell BusinessID="@businessID" />
        }
    </div>
</div>
<OfflineEarningsPopup OnCollect="@HandleCollectEarnings" />

@code {
    private bool initialized = false;

    protected override async Task OnInitializedAsync()
    {
        await StateService.InitializeAsync();
        await StateService.HandleAppStartAsync();
        await JSRuntime.InvokeVoidAsync("eval", "window.addEventListener('beforeunload', function(event) { DotNet.invokeMethodAsync('AdvCap.Client', 'SaveStateOnExit'); });");
        StateService.OnChange += StateHasChanged;
    }
    private async Task HandleCollectEarnings()
    {
        await StateService.CollectOfflineEarningsAsync();
        StateHasChanged();
    }

    
    public void Dispose()
    {
        StateService.OnChange -= StateHasChanged;
        StateService.SaveStateAsync().GetAwaiter().GetResult();
    }
}